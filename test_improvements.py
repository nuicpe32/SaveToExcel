#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
р╕Чр╕Фр╕кр╕нр╕Ър╕Яр╕╡р╣Ар╕Ир╕нр╕гр╣Мр╕Ыр╕гр╕▒р╕Ър╕Ыр╕гр╕╕р╕Зр╣Гр╕лр╕бр╣И
"""

import json
import os
from datetime import datetime

def test_bank_data():
    """р╕Чр╕Фр╕кр╕нр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Шр╕Щр╕▓р╕Др╕▓р╕г"""
    print("="*80)
    print("ЁЯПж р╕Чр╕Фр╕кр╕нр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Шр╕Щр╕▓р╕Др╕▓р╕гр╣Бр╕ер╕░ dropdown lists")
    print("="*80)
    
    if os.path.exists('bank_data.json'):
        with open('bank_data.json', 'r', encoding='utf-8') as f:
            bank_data = json.load(f)
        
        branches = bank_data.get('bank_branches', [])
        names = bank_data.get('bank_names', [])
        mappings = bank_data.get('address_mapping', {})
        
        print(f"тЬЕ р╣Вр╕лр╕ер╕Фр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Шр╕Щр╕▓р╕Др╕▓р╕гр╕кр╕│р╣Ар╕гр╣Зр╕И")
        print(f"   ЁЯУК р╕Шр╕Щр╕▓р╕Др╕▓р╕гр╕кр╕▓р╕Вр╕▓: {len(branches)} р╕гр╕▓р╕вр╕Бр╕▓р╕г")
        print(f"   ЁЯПЫя╕П р╕Кр╕╖р╣Ир╕нр╕Шр╕Щр╕▓р╕Др╕▓р╕г: {len(names)} р╕гр╕▓р╕вр╕Бр╕▓р╕г")
        print(f"   ЁЯУН р╕Бр╕▓р╕г mapping р╕Чр╕╡р╣Ир╕нр╕вр╕╣р╣И: {len(mappings)} р╕гр╕▓р╕вр╕Бр╕▓р╕г")
        
        print(f"\nЁЯФ╣ р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Шр╕Щр╕▓р╕Др╕▓р╕гр╕кр╕▓р╕Вр╕▓ (5 р╕гр╕▓р╕вр╕Бр╕▓р╕гр╣Бр╕гр╕Б):")
        for i, branch in enumerate(branches[:5], 1):
            print(f"   {i}. {branch}")
        
        print(f"\nЁЯФ╣ р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Кр╕╖р╣Ир╕нр╕Шр╕Щр╕▓р╕Др╕▓р╕г (5 р╕гр╕▓р╕вр╕Бр╕▓р╕гр╣Бр╕гр╕Б):")
        for i, name in enumerate(names[:5], 1):
            print(f"   {i}. {name}")
        
        print(f"\nЁЯФ╣ р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕г mapping р╕Чр╕╡р╣Ир╕нр╕вр╕╣р╣И:")
        count = 0
        for key, addr in mappings.items():
            if count >= 2:
                break
            branch, name = key.split('|')
            print(f"   {branch} + {name} =>")
            print(f"     р╕Чр╕╡р╣Ир╕нр╕вр╕╣р╣И: {addr.get('р╕Чр╕╡р╣Ир╕нр╕вр╕╣р╣Ир╕Шр╕Щр╕▓р╕Др╕▓р╕г', '')}")
            print(f"     р╕Ир╕▒р╕Зр╕лр╕зр╕▒р╕Ф: {addr.get('р╕Ир╕▒р╕Зр╕лр╕зр╕▒р╕Ф', '')}")
            count += 1
        
        return True
    else:
        print("тЭМ р╣Др╕бр╣Ир╕Юр╕Ър╣Др╕Яр╕ер╣М bank_data.json")
        return False

def test_automatic_fields():
    """р╕Чр╕Фр╕кр╕нр╕Ър╕Яр╕┤р╕ер╕Фр╣Мр╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤"""
    print(f"\nЁЯУЕ р╕Чр╕Фр╕кр╕нр╕Ър╕Яр╕┤р╕ер╕Фр╣Мр╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤")
    print("="*50)
    
    # р╕Чр╕Фр╕кр╕нр╕Ър╕зр╕▒р╕Щр╕Чр╕╡р╣И
    now = datetime.now()
    thai_months = {
        1: "р╕бр╕Бр╕гр╕▓р╕Др╕б", 2: "р╕Бр╕╕р╕бр╕ар╕▓р╕Юр╕▒р╕Щр╕Шр╣М", 3: "р╕бр╕╡р╕Щр╕▓р╕Др╕б", 4: "р╣Ар╕бр╕йр╕▓р╕вр╕Щ",
        5: "р╕Юр╕др╕йр╕ар╕▓р╕Др╕б", 6: "р╕бр╕┤р╕Цр╕╕р╕Щр╕▓р╕вр╕Щ", 7: "р╕Бр╕гр╕Бр╕Ор╕▓р╕Др╕б", 8: "р╕кр╕┤р╕Зр╕лр╕▓р╕Др╕б",
        9: "р╕Бр╕▒р╕Щр╕вр╕▓р╕вр╕Щ", 10: "р╕Хр╕╕р╕ер╕▓р╕Др╕б", 11: "р╕Юр╕др╕ир╕Ир╕┤р╕Бр╕▓р╕вр╕Щ", 12: "р╕Шр╕▒р╕Щр╕зр╕▓р╕Др╕б"
    }
    
    current_day = str(now.day)
    current_month = thai_months[now.month]
    current_year = str(now.year + 543)  # р╕Ю.р╕и.
    
    print(f"тЬЕ р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤:")
    print(f"   р╕зр╕▒р╕Щ: {current_day}")
    print(f"   р╣Ар╕Фр╕╖р╕нр╕Щ: {current_month}")
    print(f"   р╕Ыр╕╡: {current_year}")
    
    # р╕Чр╕Фр╕кр╕нр╕Ър╕ер╕│р╕Фр╕▒р╕Ъ (р╕Ир╕│р╕ер╕нр╕З)
    print(f"\nтЬЕ р╕ер╕│р╕Фр╕▒р╕Ър╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤:")
    print(f"   р╕ер╕│р╕Фр╕▒р╕Ър╕Цр╕▒р╕Фр╣Др╕Ы: 272 (р╕Хр╣Ир╕нр╕Ир╕▓р╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕Фр╕┤р╕б 271 р╣Бр╕Цр╕з)")
    
    return True

def test_improvements_summary():
    """р╕кр╕гр╕╕р╕Ыр╕Бр╕▓р╕гр╕Ыр╕гр╕▒р╕Ър╕Ыр╕гр╕╕р╕З"""
    print(f"\nЁЯОп р╕кр╕гр╕╕р╕Ыр╕Бр╕▓р╕гр╕Ыр╕гр╕▒р╕Ър╕Ыр╕гр╕╕р╕Зр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф")
    print("="*80)
    
    improvements = [
        "тЬЕ р╕ер╕│р╕Фр╕▒р╕Ъ - р╣Бр╕кр╕Фр╕Зр╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤ (р╕ер╕│р╕Фр╕▒р╕Ър╕ер╣Ир╕▓р╕кр╕╕р╕Ф + 1)",
        "тЬЕ р╕зр╕▒р╕Щ р╣Ар╕Фр╕╖р╕нр╕Щ р╕Ыр╕╡ - р╣Бр╕кр╕Фр╕Зр╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕Ыр╕▒р╕Ир╕Ир╕╕р╕Ър╕▒р╕Щр╣Гр╕Щр╕гр╕╣р╕Ыр╣Бр╕Ър╕Ър╣Др╕Чр╕в",
        "тЬЕ р╕Шр╕Щр╕▓р╕Др╕▓р╕гр╕кр╕▓р╕Вр╕▓ - dropdown list р╕Ир╕▓р╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕Фр╕┤р╕б (40 р╕гр╕▓р╕вр╕Бр╕▓р╕г)",
        "тЬЕ р╕Кр╕╖р╣Ир╕нр╕Шр╕Щр╕▓р╕Др╕▓р╕г - dropdown list р╕Ир╕▓р╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕Фр╕┤р╕б (20 р╕гр╕▓р╕вр╕Бр╕▓р╕г)",
        "тЬЕ р╕Кр╕╖р╣Ир╕нр╕Ър╕▒р╕Нр╕Кр╕╡ тЖФ р╣Ар╕Ир╣Йр╕▓р╕Вр╕нр╕Зр╕Ър╕▒р╕Нр╕Кр╕╡р╕бр╣Йр╕▓ - р╕Лр╕┤р╕Зр╕Др╣Мр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕Фр╕╡р╕вр╕зр╕Бр╕▒р╕Щ",
        "тЬЕ р╕Кр╣Ир╕зр╕Зр╣Ар╕зр╕ер╕▓ - р╕вр╣Йр╕▓р╕вр╣Др╕Ыр╕кр╣Ир╕зр╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Шр╕Щр╕▓р╕Др╕▓р╕г",
        "тЬЕ р╕Чр╕╡р╣Ир╕нр╕вр╕╣р╣Ир╕Шр╕Щр╕▓р╕Др╕▓р╕г - р╣Бр╕кр╕Фр╕Зр╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤р╕Хр╕▓р╕бр╕Бр╕▓р╕гр╣Ар╕ер╕╖р╕нр╕Бр╕Шр╕Щр╕▓р╕Др╕▓р╕г",
        "тЬЕ р╕Лр╕нр╕в р╕лр╕бр╕╣р╣И р╕Хр╕│р╕Ър╕е р╕нр╕│р╣Ар╕ар╕н р╕Цр╕Щр╕Щ р╕Ир╕▒р╕Зр╕лр╕зр╕▒р╕Ф р╕гр╕лр╕▒р╕кр╣Др╕Ыр╕гр╕йр╕Ур╕╡ - р╣Бр╕кр╕Фр╕Зр╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤"
    ]
    
    for improvement in improvements:
        print(f"   {improvement}")
    
    print(f"\nЁЯУЛ р╣Вр╕Др╕гр╕Зр╕кр╕гр╣Йр╕▓р╕Зр╕Яр╕┤р╕ер╕Фр╣Мр╣Гр╕лр╕бр╣И:")
    groups = [
        ("ЁЯУЛ р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н", ["р╕ер╕│р╕Фр╕▒р╕Ъ (auto)", "р╣Ар╕ер╕Вр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н", "р╕зр╕▒р╕Щ (auto)", "р╣Ар╕Фр╕╖р╕нр╕Щ (auto)", "р╕Ыр╕╡ (auto)"]),
        ("ЁЯПж р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Шр╕Щр╕▓р╕Др╕▓р╕г", ["р╕Шр╕Щр╕▓р╕Др╕▓р╕гр╕кр╕▓р╕Вр╕▓ (dropdown)", "р╕Кр╕╖р╣Ир╕нр╕Шр╕Щр╕▓р╕Др╕▓р╕г (dropdown)", "р╣Ар╕ер╕Вр╕Ър╕▒р╕Нр╕Кр╕╡", "р╕Кр╕╖р╣Ир╕нр╕Ър╕▒р╕Нр╕Кр╕╡", "р╣Ар╕Ир╣Йр╕▓р╕Вр╕нр╕Зр╕Ър╕▒р╕Нр╕Кр╕╡р╕бр╣Йр╕▓ (linked)", "р╕Кр╣Ир╕зр╕Зр╣Ар╕зр╕ер╕▓"]),
        ("ЁЯСд р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ьр╕╣р╣Йр╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Вр╣Йр╕нр╕З", ["р╕Ьр╕╣р╣Йр╣Ар╕кр╕╡р╕вр╕лр╕▓р╕в", "р╣Ар╕Др╕кр╣Др╕нр╕Фр╕╡"]),
        ("ЁЯУН р╕Чр╕╡р╣Ир╕нр╕вр╕╣р╣Ир╕Шр╕Щр╕▓р╕Др╕▓р╕г", ["р╕Чр╕╡р╣Ир╕нр╕вр╕╣р╣Ир╕Шр╕Щр╕▓р╕Др╕▓р╕г (auto)", "р╕Лр╕нр╕в (auto)", "р╕лр╕бр╕╣р╣И (auto)", "р╕Хр╕│р╕Ър╕е/р╣Бр╕Вр╕зр╕З (auto)", "р╕нр╕│р╣Ар╕ар╕н/р╣Ар╕Вр╕Х (auto)", "р╕Цр╕Щр╕Щ (auto)", "р╕Ир╕▒р╕Зр╕лр╕зр╕▒р╕Ф (auto)", "р╕гр╕лр╕▒р╕кр╣Др╕Ыр╕гр╕йр╕Ур╕╡ (auto)"]),
        ("ЁЯУЕ р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Бр╕▓р╕гр╕кр╣Ир╕З", ["р╕зр╕▒р╕Щр╕Щр╕▒р╕Фр╕кр╣Ир╕З", "р╣Ар╕Фр╕╖р╕нр╕Щр╕кр╣Ир╕З", "р╣Ар╕зр╕ер╕▓р╕кр╣Ир╕З"])
    ]
    
    for group_name, fields in groups:
        print(f"\n   {group_name}")
        for field in fields:
            print(f"     тАв {field}")
    
    print(f"\nЁЯЪА р╕зр╕┤р╕Шр╕╡р╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ:")
    print(f"   1. python3 install_dependencies.py")
    print(f"   2. python3 simple_excel_manager.py")
    print(f"   3. р╣Ар╕ер╕╖р╕нр╕Бр╣Бр╕Чр╣Зр╕Ъ 'р╕Бр╕гр╕нр╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕е' р╣Ар╕Юр╕╖р╣Ир╕нр╣Гр╕Кр╣Йр╕Яр╕╡р╣Ар╕Ир╕нр╕гр╣Мр╣Гр╕лр╕бр╣И")
    print(f"   4. р╣Ар╕ер╕╖р╕нр╕Бр╕Шр╕Щр╕▓р╕Др╕▓р╕гр╕Ир╕▓р╕Б dropdown -> р╕Чр╕╡р╣Ир╕нр╕вр╕╣р╣Ир╕Ир╕░р╕Ыр╕гр╕▓р╕Бр╕Пр╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤")
    print(f"   5. р╕Бр╕гр╕нр╕Бр╕Кр╕╖р╣Ир╕нр╕Ър╕▒р╕Нр╕Кр╕╡ -> р╣Ар╕Ир╣Йр╕▓р╕Вр╕нр╕Зр╕Ър╕▒р╕Нр╕Кр╕╡р╕бр╣Йр╕▓р╕Ир╕░р╕Лр╕┤р╕Зр╕Др╣Мр╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤")

def main():
    """р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕лр╕ер╕▒р╕Б"""
    print("ЁЯФе р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╕Ыр╕гр╕▒р╕Ър╕Ыр╕гр╕╕р╕Зр╣Вр╕Ыр╕гр╣Бр╕Бр╕гр╕б Excel Data Manager")
    
    bank_ok = test_bank_data()
    auto_ok = test_automatic_fields()
    
    if bank_ok and auto_ok:
        print(f"\nЁЯОЙ р╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ър╕кр╕│р╣Ар╕гр╣Зр╕Ир╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф!")
        test_improvements_summary()
    else:
        print(f"\nтЪая╕П р╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ър╣Др╕бр╣Ир╕кр╕бр╕Ър╕╣р╕гр╕Ур╣М")

if __name__ == "__main__":
    main()