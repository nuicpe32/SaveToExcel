#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå Excel
"""

import os
import shutil
from datetime import datetime

def test_excel_writing():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ü‡∏•‡πå Excel"""
    print("="*80)
    print("üî• ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå Excel")
    print("="*80)
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    headers = [
        "‡∏•‡∏≥‡∏î‡∏±‡∏ö", "‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠", "‡∏ß‡∏±‡∏ô", "‡πÄ‡∏î‡∏∑‡∏≠‡∏ô", "‡∏õ‡∏µ", "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏™‡∏≤‡∏Ç‡∏≤", 
        "‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢", "‡πÄ‡∏Ñ‡∏™‡πÑ‡∏≠‡∏î‡∏µ", "‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏°‡πâ‡∏≤", "‡∏ä‡∏∑‡πà‡∏≠‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£", "‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ", 
        "‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ", "‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤", "‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£", "‡∏ã‡∏≠‡∏¢", "‡∏´‡∏°‡∏π‡πà", "‡∏ï‡∏≥‡∏ö‡∏•/‡πÅ‡∏Ç‡∏ß‡∏á", 
        "‡∏≠‡∏≥‡πÄ‡∏†‡∏≠/‡πÄ‡∏Ç‡∏ï", "‡∏ñ‡∏ô‡∏ô", "‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î", "‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ", "‡∏ß‡∏±‡∏ô‡∏ô‡∏±‡∏î‡∏™‡πà‡∏á", "‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏™‡πà‡∏á", "‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡πà‡∏á"
    ]
    
    test_data = [
        ["272", "9999", "2", "‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°", "2568", "‡∏Å‡∏£‡∏∏‡∏á‡πÑ‡∏ó‡∏¢ ‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏ç‡πà", 
         "‡∏ô‡∏≤‡∏¢‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏£‡∏∞‡∏ö‡∏ö", "TEST001", "‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å", "‡∏Å‡∏£‡∏∏‡∏á‡πÑ‡∏ó‡∏¢", "1234567890", 
         "‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å", "1-31 ‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏° 2568", "333", "-", "-", "‡∏™‡∏≤‡∏°‡πÄ‡∏™‡∏ô‡πÉ‡∏ô", 
         "‡∏û‡∏ç‡∏≤‡πÑ‡∏ó", "‡∏û‡∏´‡∏•‡πÇ‡∏¢‡∏ò‡∏¥‡∏ô", "‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£", "10400", "3", "‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°", "09.00 ‡∏ô."],
        ["273", "10000", "2", "‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°", "2568", "‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢ ‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏ç‡πà", 
         "‡∏ô‡∏≤‡∏¢‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏£‡∏∞‡∏ö‡∏ö 2", "TEST002", "‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å 2", "‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢", "9876543210", 
         "‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å 2", "1-31 ‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏° 2568", "400/22", "-", "-", "‡∏™‡∏≤‡∏°‡πÄ‡∏™‡∏ô‡πÉ‡∏ô", 
         "‡∏û‡∏ç‡∏≤‡πÑ‡∏ó", "‡∏û‡∏´‡∏•‡πÇ‡∏¢‡∏ò‡∏¥‡∏ô", "‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£", "10400", "3", "‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°", "09.00 ‡∏ô."]
    ]
    
    print(f"üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö:")
    print(f"   - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå: {len(headers)}")
    print(f"   - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ñ‡∏ß‡∏ó‡∏î‡∏™‡∏≠‡∏ö: {len(test_data)}")
    
    print(f"\nüîπ ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå:")
    for i, header in enumerate(headers, 1):
        print(f"   {i:2d}. {header}")
    
    print(f"\nüîπ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö:")
    for i, row in enumerate(test_data, 1):
        print(f"   ‡πÅ‡∏ñ‡∏ß {i}: ‡∏•‡∏≥‡∏î‡∏±‡∏ö={row[0]}, ‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠={row[1]}, ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£={row[9]}")
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ü‡∏•‡πå
    test_file = "test_save_output.xlsx"
    
    try:
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏•‡∏≤‡∏™‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
        from simple_excel_manager import SimpleExcelManager
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡∏ö‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
        class TestExcelWriter:
            def __init__(self):
                self.string_list = []
                self.string_map = {}
            
            def create_excel_structure(self, temp_dir, headers, data_rows):
                """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á Excel"""
                print(f"   üìÅ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ô {temp_dir}")
                
                import os
                # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
                os.makedirs(os.path.join(temp_dir, "_rels"))
                os.makedirs(os.path.join(temp_dir, "docProps"))
                os.makedirs(os.path.join(temp_dir, "xl"))
                os.makedirs(os.path.join(temp_dir, "xl", "_rels"))
                os.makedirs(os.path.join(temp_dir, "xl", "worksheets"))
                
                # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
                self.create_basic_files(temp_dir, headers, data_rows)
                print(f"   ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á Excel ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô")
            
            def create_basic_files(self, temp_dir, headers, data_rows):
                """‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô"""
                # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå CSV ‡∏á‡πà‡∏≤‡∏¢‡πÜ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
                import csv
                csv_file = os.path.join(temp_dir, "data.csv")
                with open(csv_file, 'w', newline='', encoding='utf-8') as f:
                    writer = csv.writer(f)
                    writer.writerow(headers)
                    writer.writerows(data_rows)
                print(f"   üìÑ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö: {csv_file}")
        
        print(f"\nüîß ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ü‡∏•‡πå Excel:")
        writer = TestExcelWriter()
        
        # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á
        temp_dir = "test_temp_excel"
        if os.path.exists(temp_dir):
            shutil.rmtree(temp_dir)
        
        writer.create_excel_structure(temp_dir, headers, test_data)
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
        if os.path.exists(temp_dir):
            print(f"   ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á
            for root, dirs, files in os.walk(temp_dir):
                for file in files:
                    file_path = os.path.join(root, file)
                    rel_path = os.path.relpath(file_path, temp_dir)
                    print(f"   üìÑ ‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå: {rel_path}")
            
            # ‡∏•‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö
            shutil.rmtree(temp_dir)
            print(f"   üóëÔ∏è ‡∏•‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß")
        
        print(f"\nüéØ ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:")
        print(f"   ‚úÖ ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
        print(f"   ‚úÖ ‡∏Å‡∏≤‡∏£‡πÅ‡∏°‡∏û‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå: ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        print(f"   ‚úÖ ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ü‡∏•‡πå: ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        
        return True
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö: {e}")
        return False

def test_column_mapping():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏°‡∏û‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå"""
    print(f"\nüìã ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏°‡∏û‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå:")
    
    column_mapping = {
        'order_no': '‡∏•‡∏≥‡∏î‡∏±‡∏ö',
        'document_no': '‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠',
        'day': '‡∏ß‡∏±‡∏ô',
        'month': '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô',
        'year': '‡∏õ‡∏µ',
        'bank_branch': '‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏™‡∏≤‡∏Ç‡∏≤',
        'victim': '‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢',
        'case_id': '‡πÄ‡∏Ñ‡∏™‡πÑ‡∏≠‡∏î‡∏µ',
        'account_owner_horse': '‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏°‡πâ‡∏≤',
        'bank_name': '‡∏ä‡∏∑‡πà‡∏≠‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£',
        'account_no': '‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ',
        'account_name': '‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ',
        'time_period': '‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤',
        'bank_address': '‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£',
        'soi': '‡∏ã‡∏≠‡∏¢',
        'moo': '‡∏´‡∏°‡∏π‡πà',
        'tambon_khwaeng': '‡∏ï‡∏≥‡∏ö‡∏•/‡πÅ‡∏Ç‡∏ß‡∏á',
        'amphoe_khet': '‡∏≠‡∏≥‡πÄ‡∏†‡∏≠/‡πÄ‡∏Ç‡∏ï',
        'road': '‡∏ñ‡∏ô‡∏ô',
        'province': '‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î',
        'postal_code': '‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ',
        'delivery_day': '‡∏ß‡∏±‡∏ô‡∏ô‡∏±‡∏î‡∏™‡πà‡∏á',
        'delivery_month': '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏™‡πà‡∏á',
        'delivery_time': '‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡πà‡∏á'
    }
    
    print(f"   üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏°‡∏û: {len(column_mapping)} ‡∏ü‡∏¥‡∏•‡∏î‡πå")
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°
    form_data = {
        'order_no': '272',
        'document_no': '9999',
        'day': '2',
        'month': '‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°',
        'year': '2568',
        'bank_branch': '‡∏Å‡∏£‡∏∏‡∏á‡πÑ‡∏ó‡∏¢ ‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏ç‡πà',
        'bank_name': '‡∏Å‡∏£‡∏∏‡∏á‡πÑ‡∏ó‡∏¢',
        'victim': '‡∏ô‡∏≤‡∏¢‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏£‡∏∞‡∏ö‡∏ö',
        'case_id': 'TEST001'
    }
    
    print(f"\n   üîπ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏°‡∏û‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:")
    for form_key, form_value in form_data.items():
        excel_col = column_mapping.get(form_key, '')
        print(f"     {form_key} ‚Üí {excel_col} = '{form_value}'")
    
    print(f"\n   ‚úÖ ‡∏Å‡∏≤‡∏£‡πÅ‡∏°‡∏û‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")

def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å"""
    print("üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Excel Data Manager")
    
    test_column_mapping()
    success = test_excel_writing()
    
    print(f"\n{'='*80}")
    if success:
        print("üéâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î!")
        print("\nüìù ‡∏™‡∏£‡∏∏‡∏õ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å:")
        print("   ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á")
        print("   ‚úÖ ‡πÅ‡∏°‡∏û‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
        print("   ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ï‡πà‡∏≠‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°")
        print("   ‚úÖ ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
        print("   ‚úÖ ‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å")
        
        print(f"\nüöÄ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:")
        print(f"   1. python3 install_dependencies.py")
        print(f"   2. python3 simple_excel_manager.py")
        print(f"   3. ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å'")
        print(f"   4. ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏±‡∏ô‡∏ó‡∏µ")
    else:
        print("‚ö†Ô∏è ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå - ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö")

if __name__ == "__main__":
    main()