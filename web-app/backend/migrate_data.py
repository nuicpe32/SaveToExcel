#!/usr/bin/env python3
"""
Data Migration Script
‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Excel files ‡πÑ‡∏õ PostgreSQL database

Usage:
    python migrate_data.py --all
    python migrate_data.py --banks
    python migrate_data.py --suspects
    python migrate_data.py --cases
    python migrate_data.py --arrests
"""

import sys
import argparse
from pathlib import Path

sys.path.append(str(Path(__file__).parent))

from app.services.data_migration import DataMigration
from app.core.database import Base, engine


def init_database():
    print("üîß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...")
    Base.metadata.create_all(bind=engine)
    print("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô\n")


def main():
    parser = argparse.ArgumentParser(description='Data Migration Tool')
    parser.add_argument('--all', action='store_true', help='‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î')
    parser.add_argument('--banks', action='store_true', help='‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£')
    parser.add_argument('--suspects', action='store_true', help='‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ú‡∏π‡πâ‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏≤')
    parser.add_argument('--cases', action='store_true', help='‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏î‡∏µ‡∏≠‡∏≤‡∏ç‡∏≤')
    parser.add_argument('--arrests', action='store_true', help='‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Å‡∏∏‡∏°')
    parser.add_argument('--init', action='store_true', help='‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô')
    parser.add_argument('--excel-dir', type=str, default='../../Xlsx', help='path to Excel files directory')

    args = parser.parse_args()

    if args.init:
        init_database()

    migrator = DataMigration(excel_dir=args.excel_dir)

    if args.all:
        migrator.migrate_all()
    else:
        if args.banks:
            migrator.migrate_bank_accounts()
        if args.suspects:
            migrator.migrate_suspects()
        if args.cases:
            migrator.migrate_criminal_cases()
        if args.arrests:
            migrator.migrate_post_arrests()

        if not any([args.banks, args.suspects, args.cases, args.arrests]):
            print("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ option ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏ï‡∏±‡∏ß ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ --all")
            print("‡πÉ‡∏ä‡πâ --help ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
            sys.exit(1)


if __name__ == "__main__":
    main()