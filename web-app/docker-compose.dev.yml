version: '3.8'

# Docker Compose for DEVELOPMENT
# ใช้สำหรับการพัฒนาต่อเนื่อง - รองรับ hot reload ทั้ง frontend และ backend

services:
  postgres:
    image: postgres:15-alpine
    container_name: criminal-case-db-dev
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: criminal_case_db
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d criminal_case_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - criminal-case-network

  redis:
    image: redis:7-alpine
    container_name: criminal-case-redis-dev
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - criminal-case-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: criminal-case-backend-dev
    environment:
      DATABASE_URL: postgresql://user:password123@postgres:5432/criminal_case_db
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: dev-secret-key-change-in-production
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      ENVIRONMENT: development
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      # Mount source code for hot reload
      - ./backend:/app
      - backend_uploads_dev:/app/uploads
      - ../Xlsx:/app/Xlsx:ro
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - criminal-case-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      target: development
    container_name: criminal-case-frontend-dev
    ports:
      - "3001:3000"
    depends_on:
      - backend
    volumes:
      # Mount source code for hot reload
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/package.json:/app/package.json
      - ./frontend/package-lock.json:/app/package-lock.json
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/vite.config.ts:/app/vite.config.ts
      # Prevent node_modules from being overwritten
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8000
    command: npm run dev -- --host 0.0.0.0 --port 3000
    networks:
      - criminal-case-network
    restart: unless-stopped

volumes:
  postgres_data_dev:
    name: criminal-case-postgres-dev
  backend_uploads_dev:
    name: criminal-case-uploads-dev

networks:
  criminal-case-network:
    external: true
