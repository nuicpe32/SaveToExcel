version: '3.8'

# Universal Docker Compose for Criminal Case Management System
# รองรับทั้ง Development และ Production โดยใช้ Environment Variables

services:
  postgres:
    image: postgres:15-alpine
    container_name: criminal-case-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: criminal_case_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d criminal_case_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - criminal-case-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: criminal-case-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - criminal-case-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: criminal-case-backend
    environment:
      DATABASE_URL: postgresql://user:password123@postgres:5432/criminal_case_db
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-change-in-production}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      ENVIRONMENT: ${ENVIRONMENT:-development}
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USERNAME: ${SMTP_USERNAME:-}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-}
      FROM_EMAIL: ${FROM_EMAIL:-}
      FROM_NAME: ${FROM_NAME:-กองบังคับการตำรวจสืบสวนสอบสวนอาชญากรรมทางเทคโนโลยี 4}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      # Mount source code for hot reload (development)
      - ./backend:/app
      - backend_uploads:/app/uploads
      - ../Xlsx:/app/Xlsx:ro
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - criminal-case-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: criminal-case-frontend
    ports:
      - "3001:3000"
    depends_on:
      - backend
    volumes:
      # Mount source code for hot reload (development)
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/package.json:/app/package.json
      - ./frontend/package-lock.json:/app/package-lock.json
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/vite.config.ts:/app/vite.config.ts
      # Prevent node_modules from being overwritten
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8000
    command: npm run dev -- --host 0.0.0.0 --port 3000
    networks:
      - criminal-case-network
    restart: unless-stopped

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: criminal-case-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - criminal-case-network
    restart: unless-stopped
    profiles:
      - tools

  # Optional: Adminer for database management
  adminer:
    image: adminer:latest
    container_name: criminal-case-adminer
    ports:
      - "8080:8080"
    networks:
      - criminal-case-network
    restart: unless-stopped
    profiles:
      - tools

volumes:
  postgres_data:
    name: criminal-case-postgres
  backend_uploads:
    name: criminal-case-uploads
  pgadmin_data:
    name: criminal-case-pgadmin

networks:
  criminal-case-network:
    driver: bridge